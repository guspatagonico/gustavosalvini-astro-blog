---
import { ClientRouter } from "astro:transitions";
import { SITE } from "@/config";
import "@fontsource/space-mono";
import "@fontsource-variable/inter";
import "@/styles/global.css";
import CookieConsent from "../components/CookieConsent.astro";

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
  canonicalURL = new URL(Astro.url.pathname, Astro.url),
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const socialImageURL = new URL(ogImage, Astro.url);

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      ...(profile && { url: profile }),
    },
  ],
};
---

<!doctype html>
<html lang=`${SITE.lang ?? "en"}` class={`${scrollSmooth && "scroll-smooth"}`}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={`${SITE.base ?? ""}/favicon.svg`}
    />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href={`${SITE.base ?? ""}/sitemap-index.xml`} />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <!-- Enable RSS feed auto-discovery  -->
    <!-- https://docs.astro.build/en/recipes/rss/#enabling-rss-feed-auto-discovery -->
    <link
      rel="alternate"
      type="application/rss+xml"
      title={SITE.title}
      href={new URL("rss.xml", Astro.site)}
    />

    <meta name="theme-color" content="" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    <!-- Google tag (gtag.js) -->
    <script
      is:inline
      data-astro-rerun
      src="https://www.googletagmanager.com/gtag/js?id=G-09W87G423D"
    >
    </script>

    <script>
      declare global {
        interface Window {
          dataLayer: Record<string, any>[];
          gtag: (...args: any[]) => void;
        }
      }

      console.log("script executed");

      console.log("Page loaded (native HTML)");

      var host = window.location.hostname;
      console.log("host:", host);

      if (host != "localhost") {
        // your google analytic code here

        window.dataLayer = window.dataLayer || [];

        // window.gtag = function gtag(...args: any[]) {
        window.gtag = function gtag(..._args: any[]) {
          window.dataLayer.push(arguments);
        };

        window.gtag("js", new Date());
        window.gtag("consent", "default", {
          ad_storage: "denied",
          ad_user_data: "denied",
          ad_personalization: "denied",
          analytics_storage: "denied",
        });
        window.gtag("config", "G-09W87G423D");
      }

      document.addEventListener("astro:page-load", () => {
        console.log("astro:page-load event");

        var host = window.location.hostname;
        console.log("host:", host);

        if (host != "localhost") {
          // your google analytic code here

          window.dataLayer = window.dataLayer || [];

          // window.gtag = function gtag(...args: any[]) {
          window.gtag = function gtag(..._args: any[]) {
            window.dataLayer.push(arguments);
          };

          window.gtag("js", new Date());
          window.gtag("consent", "default", {
            ad_storage: "denied",
            ad_user_data: "denied",
            ad_personalization: "denied",
            analytics_storage: "denied",
          });
          window.gtag("config", "G-09W87G423D");
        }

        // window.dataLayer = window.dataLayer || [];

        // // window.gtag = function gtag(...args: any[]) {
        // window.gtag = function gtag(..._args: any[]) {
        //   window.dataLayer.push(arguments);
        // };

        // window.gtag("js", new Date());
        // window.gtag("consent", "default", {
        //   ad_storage: "denied",
        //   ad_user_data: "denied",
        //   ad_personalization: "denied",
        //   analytics_storage: "denied",
        // });
        // window.gtag("config", "G-09W87G423D");
      });
    </script>

    <ClientRouter />

    <script is:inline src=`${SITE.base ?? ""}/toggle-theme.js`></script>

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
    />
  </head>
  <body>
    <slot />

    <div transition:persist="find-me-on-the-other-side" id="cc-container">
      <CookieConsent />

      <script is:inline>
        // Restore the `show--consent` class if it was present before the page swap
        document.addEventListener("astro:before-preparation", _event => {
          // document.addEventListener("astro:before-preparation", event => {
          const htmlClassName = window.document.documentElement.className;
          const consentClassPresent = htmlClassName.includes("show--consent")
            ? true
            : false;
          window._showConsentClass = consentClassPresent;
        });

        document.addEventListener("astro:before-swap", event => {
          const showConsent = window._showConsentClass ? ` show--consent` : "";
          event.newDocument.documentElement.className += showConsent;
        });
      </script>
    </div>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
